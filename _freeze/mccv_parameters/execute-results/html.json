{
  "hash": "3613e60572d960440a6c72c6c7003eeb",
  "result": {
    "markdown": "---\ntitle: \"Learning Parameters\"\nformat:\n  html:\n    code-fold: true\n    code-summary: 'Show The Code'\n---\n\n\nRefitting the model per learned parameters from K-fold cross validation during training is a key step in the Monte Carlo Cross Validation (MCCV) methodology. However, the `run_mccv()` function that runs the entire MCCV procedure does not return these learned parameters. In this article, the learned parameters are extracted from 10-fold cross validation of a Logistic Regression model. These learned parameters are 200 intercepts and coefficients later refit to the entire training set. Here, we visualize the distribution of the learned parameters to illustrate the learning process.\n\n\n::: {.cell hash='mccv_parameters_cache/html/unnamed-chunk-1_445d4449f339d3b1c4797a319dba9854'}\n\n```{.python .cell-code}\nimport numpy as np\nimport scipy as sc\nimport pandas as pd\n\nN=100\nnp.random.seed(0)\nZ1 = np.random.beta(2,3,size=N,)\nnp.random.seed(0)\nZ2 = np.random.beta(2,2.5,size=N)\nZ = np.concatenate([Z1,Z2])\n\nY = np.concatenate([np.repeat(0,N),np.repeat(1,N)])\ndf = pd.DataFrame(data={'Y' : Y,'Z' : Z})\ndf.index.name = 'pt'\n```\n:::\n\n::: {.cell hash='mccv_parameters_cache/html/unnamed-chunk-2_1f32b8ea3dae65979dcf70fb4cd90591'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\ndf <- tibble::tibble(\n    Y = reticulate::py$Y,\n    Z = reticulate::py$Z\n)\ndf[['Y']] <- factor(df$Y,levels=c(0,1))\n\ndf %>% \n    ggplot(aes(Y,Z)) +\n    geom_boxplot(outlier.size = NA,alpha=0,linewidth=2) +\n    geom_point(position = position_jitter(width = .2),pch=21,fill='gray',size=3) +\n    labs(x = \"Response\",y=\"Predictor\") +\n    theme_bw(base_size = 16)\n```\n\n::: {.cell-output-display}\n![](mccv_parameters_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='mccv_parameters_cache/html/unnamed-chunk-3_6f663424720a6125d822c323f81bc33e'}\n\n```{.python .cell-code}\nimport mccv\nimport pandas as pd\n\nmccv_obj = mccv.mccv(num_bootstraps=200,n_jobs=4)    \nmccv_obj.set_X(df[['Z']])\nmccv_obj.set_Y(df[['Y']])\n\nparam_dfs=[]\nfor seed in range(200):\n    retrained_fit = mccv_obj.mccv(seed)[1]['Logistic Regression'].__dict__\n    param_dict = {k : retrained_fit[k].reshape(-1)[0] for k in ('coef_','intercept_')}\n    param_df = pd.DataFrame.from_dict(param_dict,orient='index',dtype='object',columns=[seed])\n    param_dfs.append(param_df)\nretrained_parameters_df = pd.concat(param_dfs,axis=1).T\nretrained_parameters_df.index.name='seed'\nretrained_parameters_df.reset_index(inplace=True)\n```\n:::\n\n::: {.cell hash='mccv_parameters_cache/html/unnamed-chunk-4_1fcff4ed986d06ff64f0f0d1766e3113'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nplot_dat <- \n    reticulate::py$retrained_parameters_df %>% \n    pivot_longer(\n        cols = contains('_')\n    ) %>% \n    mutate(\n        seed = as.integer(seed),\n        name = factor(name,levels=c(\"intercept_\",\"coef_\"),labels=c(\"Intercept\",\"Coefficient\")),\n        value = as.double(value)\n        )\n\np <- \n    plot_dat %>% \n    ggplot(aes(name,value,group=seed)) +\n    geom_line() +\n    scale_x_discrete(\n        expand = expansion(0.01,0.01),\n        name=NULL\n    ) +\n    scale_y_continuous(\n        name=\"Parameter Values\"\n    ) +\n    labs(caption='Estimated Parameters From 200 Logistic Regression Bootstraps') +\n    theme_bw(base_size = 20) +\n    theme(\n        axis.text.x = element_text(angle=45,hjust=1,vjust=1)\n    )\n\np + \n    stat_summary(fun=mean,color='red',geom='line',aes(group=1),linewidth=3) +\n    labs(caption='Estimated Parameters From 200 Logistic Regression Bootstraps\\nAverage in Red')\n```\n\n::: {.cell-output-display}\n![](mccv_parameters_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\navg_values <- \n    summarise(plot_dat,`Average Value` = mean(value),.by=name) %>% \n    mutate(across(where(is.numeric),function(x)round(x,2)))\n\navg_values %>% \n    gt::gt()\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"xafawftdpg\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>html {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n}\n\n#xafawftdpg .gt_table {\n  display: table;\n  border-collapse: collapse;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#xafawftdpg .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#xafawftdpg .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#xafawftdpg .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#xafawftdpg .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 0;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#xafawftdpg .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#xafawftdpg .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#xafawftdpg .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#xafawftdpg .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#xafawftdpg .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#xafawftdpg .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#xafawftdpg .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#xafawftdpg .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#xafawftdpg .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#xafawftdpg .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#xafawftdpg .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#xafawftdpg .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#xafawftdpg .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#xafawftdpg .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#xafawftdpg .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#xafawftdpg .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#xafawftdpg .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#xafawftdpg .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#xafawftdpg .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#xafawftdpg .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#xafawftdpg .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#xafawftdpg .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#xafawftdpg .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#xafawftdpg .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#xafawftdpg .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-left: 4px;\n  padding-right: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#xafawftdpg .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#xafawftdpg .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#xafawftdpg .gt_left {\n  text-align: left;\n}\n\n#xafawftdpg .gt_center {\n  text-align: center;\n}\n\n#xafawftdpg .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#xafawftdpg .gt_font_normal {\n  font-weight: normal;\n}\n\n#xafawftdpg .gt_font_bold {\n  font-weight: bold;\n}\n\n#xafawftdpg .gt_font_italic {\n  font-style: italic;\n}\n\n#xafawftdpg .gt_super {\n  font-size: 65%;\n}\n\n#xafawftdpg .gt_footnote_marks {\n  font-style: italic;\n  font-weight: normal;\n  font-size: 75%;\n  vertical-align: 0.4em;\n}\n\n#xafawftdpg .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#xafawftdpg .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#xafawftdpg .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#xafawftdpg .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#xafawftdpg .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#xafawftdpg .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\">\n  \n  <thead class=\"gt_col_headings\">\n    <tr>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"name\">name</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Average Value\">Average Value</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"name\" class=\"gt_row gt_center\">Coefficient</td>\n<td headers=\"Average Value\" class=\"gt_row gt_right\">0.94</td></tr>\n    <tr><td headers=\"name\" class=\"gt_row gt_center\">Intercept</td>\n<td headers=\"Average Value\" class=\"gt_row gt_right\">-0.44</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n\nWe learned that on average when the predictor is 0, there is a  -0.44 log of the odds or 0.64 odds or 0.39 probability to be in the outcome group (Y=1).\n\nOn average, there is a  0.94 expected change in the log of the odds or 2.56 odds for a one-unit increase in the predictor. In other words, we expect to see a 72% increase in the odds of being in the outcome group (Y=1) as the predictor increases by one-unit.\n\n\n::: {.cell hash='mccv_parameters_cache/html/unnamed-chunk-5_94cab4449fc7f00c091e9d91e301d36b'}\n\n```{.r .cell-code}\nlibrary(gganimate)\n#install.packages(\"transformr\")\nanimp <- \n    p + \n    transition_time(seed) + \n    labs(title=\"Seed : {frame_time}\")\nanimate(animp,duration = 5, fps = 20, width = 500, height = 500, renderer = gifski_renderer())\n```\n\n::: {.cell-output-display}\n![](mccv_parameters_files/figure-html/unnamed-chunk-5-1.gif)\n:::\n\n```{.r .cell-code}\nanim_save(\"mccv_parameters_animation.gif\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}